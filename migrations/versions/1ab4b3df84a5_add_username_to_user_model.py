"""Add username to User model

Revision ID: 1ab4b3df84a5
Revises: 3aee4165ae1f
Create Date: 2024-10-02 01:25:41.716037

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision = '1ab4b3df84a5'
down_revision = '3aee4165ae1f'
branch_labels = None
depends_on = None


from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text

def upgrade():
    # Get the database connection
    conn = op.get_bind()

    # Check if the 'username' column already exists
    result = conn.execute(text("PRAGMA table_info(user)"))
    columns = [row[1] for row in result.fetchall()]

    # Add the 'username' column if it does not exist
    if 'username' not in columns:
        op.add_column('user', sa.Column('username', sa.String(length=100), nullable=False, server_default='default_username'))

        # Update existing records with email as username
        op.execute("UPDATE user SET username = email WHERE username = 'default_username'")


def downgrade():
    # Optionally, define how to revert the upgrade
    pass

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('username')

    # ### end Alembic commands ###
